{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getSlots } from '@fluentui/react-compose/lib/next/index';\nimport { CustomizerContext } from '@uifabric/utilities';\nimport { ThemeContext } from './ThemeContext';\nimport { StyleRendererContext } from './styleRenderers/useStyleRenderer';\nexport var renderThemeProvider = function (state) {\n  var _a = getSlots(state),\n      slots = _a.slots,\n      slotProps = _a.slotProps;\n\n  var theme = state.theme,\n      customizerContext = state.customizerContext;\n  return React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, React.createElement(StyleRendererContext.Provider, {\n    value: state.renderer\n  }, React.createElement(CustomizerContext.Provider, {\n    value: customizerContext\n  }, React.createElement(slots.root, __assign({}, slotProps.root)))));\n};","map":{"version":3,"sources":["renderThemeProvider.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,QAAT,QAAyB,wCAAzB;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,oBAAT,QAAqC,mCAArC;AAEA,OAAO,IAAM,mBAAmB,GAAG,UAAC,KAAD,EAA0B;AACrD,MAAA,EAAA,GAAA,QAAA,CAAA,KAAA,CAAA;AAAA,MAAE,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,MAAS,SAAA,GAAA,EAAA,CAAA,SAAT;;AACE,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MAAO,iBAAA,GAAA,KAAA,CAAA,iBAAP;AAER,SACE,KAAA,CAAA,aAAA,CAAC,YAAY,CAAC,QAAd,EAAsB;AAAC,IAAA,KAAK,EAAE;AAAR,GAAtB,EACE,KAAA,CAAA,aAAA,CAAC,oBAAoB,CAAC,QAAtB,EAA8B;AAAC,IAAA,KAAK,EAAE,KAAK,CAAC;AAAd,GAA9B,EACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B;AAAC,IAAA,KAAK,EAAE;AAAR,GAA3B,EACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,IAAP,EAAW,QAAA,CAAA,EAAA,EAAK,SAAS,CAAC,IAAf,CAAX,CADF,CADF,CADF,CADF;AASD,CAbM","sourcesContent":["import * as React from 'react';\nimport { ThemeProviderState } from './ThemeProvider.types';\nimport { getSlots } from '@fluentui/react-compose/lib/next/index';\nimport { CustomizerContext } from '@uifabric/utilities';\nimport { ThemeContext } from './ThemeContext';\nimport { StyleRendererContext } from './styleRenderers/useStyleRenderer';\n\nexport const renderThemeProvider = (state: ThemeProviderState) => {\n  const { slots, slotProps } = getSlots(state);\n  const { theme, customizerContext } = state;\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <StyleRendererContext.Provider value={state.renderer!}>\n        <CustomizerContext.Provider value={customizerContext}>\n          <slots.root {...slotProps.root} />\n        </CustomizerContext.Provider>\n      </StyleRendererContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}