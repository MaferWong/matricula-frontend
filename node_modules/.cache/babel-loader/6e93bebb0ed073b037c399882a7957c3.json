{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wong\\\\Documents\\\\Projects\\\\Matricula\\\\matricula\\\\src\\\\components\\\\container\\\\pais\\\\pais.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CommandBar, DefaultButton, DetailsListLayoutMode, Dialog, DialogFooter, DialogType, IconButton, Panel, PrimaryButton, SearchBox, Selection, SelectionMode, ShimmeredDetailsList } from '@fluentui/react';\nimport './pais.css';\nimport { restClient } from '../../../services/restClient';\nimport { PaisForm } from './paisForm';\nexport const Pais = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenAlert, setIsOpenAlert] = useState(true);\n  const [paises, setPaises] = useState(undefined);\n  const [filtro, setFiltro] = useState([]);\n  const [pais, setPais] = useState();\n  const [accion, setAccion] = useState('New');\n  useEffect(() => {\n    fetchPaises();\n  }, []);\n\n  const fetchPaises = async () => {\n    const response = await restClient.httpGet('/pais');\n\n    if (!response.length) {\n      return;\n    }\n\n    setPaises(response.map(item => ({ ...item\n    })));\n  };\n\n  const handleRefreshClick = () => {\n    setPaises(undefined);\n    fetchPaises();\n  };\n\n  const handleDismissClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleNuevoPaisClick = () => {\n    setAccion('New');\n    setIsOpen(true);\n  };\n\n  const handleRemovePaisClick = () => {\n    setIsOpenAlert(false);\n  };\n\n  const seleccion = new Selection({\n    onSelectionChanged: () => {\n      const itemSeleccionado = seleccion.getSelection();\n      setPais(itemSeleccionado.length ? itemSeleccionado[0] : null);\n    }\n  });\n\n  const handleSearchPais = value => {\n    if (!value) {\n      setPaises(undefined);\n      setFiltro([]);\n      fetchPaises();\n      return;\n    }\n\n    const dataFilter = paises && paises.filter(item => item.nombre.toUpperCase().includes(value.toUpperCase()));\n    setFiltro(dataFilter);\n  };\n\n  const handleDismissAlertClick = () => {\n    setIsOpenAlert(true);\n  };\n\n  const handleEditPaisClick = () => {\n    if (!pais) return 'Selecione un pais';\n    setAccion('Edit');\n    setIsOpen(true);\n  };\n\n  const handleRemoverPaisClick = async () => {\n    if (!pais) return;\n    const response = await restClient.httpDelete('/pais', pais.id);\n\n    if (response === 'success') {\n      handleDismissAlertClick();\n      setPaises(undefined);\n      fetchPaises();\n    }\n  };\n\n  const handleNoRemoverPaisClick = () => {\n    handleDismissAlertClick();\n  };\n\n  const onRenderEdit = row => /*#__PURE__*/_jsxDEV(IconButton, {\n    iconProps: {\n      iconName: 'Edit'\n    },\n    onClick: handleEditPaisClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 35\n  }, this);\n\n  const onRenderDelete = row => /*#__PURE__*/_jsxDEV(IconButton, {\n    iconProps: {\n      iconName: 'Delete'\n    },\n    onClick: handleRemovePaisClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 37\n  }, this);\n\n  const columns = [{\n    key: 'onRenderEdit',\n    name: '',\n    fieldName: '',\n    minWidth: 30,\n    maxWidth: 30,\n    isResizable: true,\n    onRender: onRenderEdit\n  }, {\n    key: 'onRenderDelete',\n    name: '',\n    fieldName: '',\n    minWidth: 30,\n    maxWidth: 30,\n    isResizable: true,\n    onRender: onRenderDelete\n  }, {\n    key: 'column1',\n    name: 'Id',\n    fieldName: 'id',\n    minWidth: 100,\n    maxWidth: 200,\n    isResizable: true\n  }, {\n    key: 'column2',\n    name: 'Nombre del pais',\n    fieldName: 'nombre',\n    minWidth: 100,\n    maxWidth: 200,\n    isResizable: true\n  }];\n  const isDisableButton = pais ? false : true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pais\",\n    children: [/*#__PURE__*/_jsxDEV(CommandBar // Esta es la barra de comandos en donde están los botones para agregar, editar, etc.\n    , {\n      items: [{\n        key: 'refresh',\n        text: 'Refresh',\n        iconProps: {\n          iconName: 'Refresh'\n        },\n        onClick: handleRefreshClick\n      }, {\n        key: 'newPais',\n        text: 'New',\n        iconProps: {\n          iconName: 'Add'\n        },\n        onClick: handleNuevoPaisClick\n      }, {\n        key: 'removerPais',\n        text: 'Remove',\n        iconProps: {\n          iconName: 'Delete'\n        },\n        onClick: handleRemovePaisClick,\n        disabled: isDisableButton\n      }, {\n        key: 'editarPais',\n        text: 'Editar Pais',\n        iconProps: {\n          iconName: 'Edit'\n        },\n        onClick: handleEditPaisClick,\n        disabled: isDisableButton\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox // Control de búsqueda\n    , {\n      styles: {\n        root: {\n          width: '300px'\n        }\n      },\n      placeholder: \"Buscar...\",\n      onSearch: handleSearchPais\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedorLista\",\n      children: /*#__PURE__*/_jsxDEV(ShimmeredDetailsList, {\n        items: filtro.length ? filtro : paises,\n        columns: columns,\n        layoutMode: DetailsListLayoutMode.justified,\n        selection: seleccion,\n        selectionPreservedOnEmptyClick: true,\n        selectionMode: SelectionMode.single,\n        enableShimmer: !paises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Panel // Este es el panel que sale del lado derecho para agregar o editar información\n    , {\n      headerText: accion === 'New' ? \"Nuevo Pais\" : \"Editar Pais\" // Aquí se valida si el título de header es para hacer uno nuevo o para editar, esto debido a que se esta reutilizando el mismo panel\n      ,\n      isOpen: isOpen,\n      onDismiss: handleDismissClick,\n      customWidth: \"700px\",\n      children: /*#__PURE__*/_jsxDEV(PaisForm // Este es el formulario que contiene los controles con la información\n      , {\n        fetchPaises: fetchPaises // Hace un GET a la API\n        ,\n        paisSeleccionado: pais || {},\n        accion: accion,\n        onDismiss: handleDismissClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog // Ventana de diálogo que aparece cuándo se desea remover un registro\n    , {\n      hidden: isOpenAlert,\n      onDismiss: handleDismissAlertClick,\n      dialogContentProps: {\n        type: DialogType.normal,\n        title: 'Remove Country',\n        closeButtonAriaLabel: 'Close',\n        subText: 'Remove Country?'\n      },\n      modalProps: {\n        titleAriaId: '',\n        subtitleAriaId: '',\n        isBlocking: false,\n        styles: {\n          main: {\n            maxWidth: 450\n          }\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(DialogFooter // Esto muestra los dos botones en la parte inferior, conultando se desea o no eliminar el registro\n      , {\n        children: [/*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: handleRemoverPaisClick,\n          text: \"Si\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DefaultButton, {\n          onClick: handleNoRemoverPaisClick,\n          text: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pais, \"QNwpSPEU08AtnK2bhYWgYHrwcWw=\");\n\n_c = Pais;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pais\");","map":{"version":3,"sources":["C:/Users/Wong/Documents/Projects/Matricula/matricula/src/components/container/pais/pais.js"],"names":["React","useEffect","useState","CommandBar","DefaultButton","DetailsListLayoutMode","Dialog","DialogFooter","DialogType","IconButton","Panel","PrimaryButton","SearchBox","Selection","SelectionMode","ShimmeredDetailsList","restClient","PaisForm","Pais","isOpen","setIsOpen","isOpenAlert","setIsOpenAlert","paises","setPaises","undefined","filtro","setFiltro","pais","setPais","accion","setAccion","fetchPaises","response","httpGet","length","map","item","handleRefreshClick","handleDismissClick","handleNuevoPaisClick","handleRemovePaisClick","seleccion","onSelectionChanged","itemSeleccionado","getSelection","handleSearchPais","value","dataFilter","filter","nombre","toUpperCase","includes","handleDismissAlertClick","handleEditPaisClick","handleRemoverPaisClick","httpDelete","id","handleNoRemoverPaisClick","onRenderEdit","row","iconName","onRenderDelete","columns","key","name","fieldName","minWidth","maxWidth","isResizable","onRender","isDisableButton","text","iconProps","onClick","disabled","root","width","justified","single","type","normal","title","closeButtonAriaLabel","subText","titleAriaId","subtitleAriaId","isBlocking","styles","main"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { CommandBar, DefaultButton, DetailsListLayoutMode, Dialog, DialogFooter, DialogType, IconButton, Panel, PrimaryButton, SearchBox, Selection, SelectionMode, ShimmeredDetailsList } from '@fluentui/react';\r\nimport './pais.css'\r\nimport { restClient } from '../../../services/restClient';\r\nimport { PaisForm } from './paisForm';\r\n\r\nexport const Pais = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenAlert, setIsOpenAlert] = useState(true);\r\n    const [paises, setPaises] = useState(undefined);\r\n    const [filtro, setFiltro] = useState([]);\r\n    const [pais, setPais] = useState();\r\n    const [accion, setAccion] = useState('New');\r\n\r\n    useEffect(() => {\r\n        fetchPaises();\r\n    }, []);\r\n\r\n    const fetchPaises = async () => {\r\n        const response = await restClient.httpGet('/pais');\r\n\r\n        if (!response.length) {\r\n            return;\r\n        }\r\n\r\n        setPaises(response.map(item => ({ ...item })));\r\n    }\r\n\r\n    const handleRefreshClick = () => {\r\n        setPaises(undefined);\r\n\r\n        fetchPaises();\r\n    }\r\n\r\n    const handleDismissClick = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const handleNuevoPaisClick = () => {\r\n        setAccion('New');\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const handleRemovePaisClick = () => {\r\n        setIsOpenAlert(false);\r\n    }\r\n\r\n    const seleccion = new Selection({\r\n        onSelectionChanged: () => {\r\n            const itemSeleccionado = seleccion.getSelection();\r\n\r\n            setPais(itemSeleccionado.length ? itemSeleccionado[0] : null);\r\n        },\r\n    });\r\n\r\n    const handleSearchPais = value => {\r\n\r\n        if (!value) {\r\n            setPaises(undefined);\r\n            setFiltro([]);\r\n            fetchPaises();\r\n\r\n            return;\r\n        }\r\n\r\n        const dataFilter = paises && paises.filter(item => item.nombre.toUpperCase().includes(value.toUpperCase()));\r\n\r\n        setFiltro(dataFilter);\r\n    }\r\n\r\n    const handleDismissAlertClick = () => {\r\n        setIsOpenAlert(true);\r\n    }\r\n\r\n    const handleEditPaisClick = () => {\r\n        if (!pais) return 'Selecione un pais';\r\n\r\n        setAccion('Edit');\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const handleRemoverPaisClick = async () => {\r\n        if (!pais) return;\r\n\r\n        const response = await restClient.httpDelete('/pais', pais.id);\r\n\r\n        if (response === 'success') {\r\n            handleDismissAlertClick();\r\n            setPaises(undefined);\r\n            fetchPaises();\r\n        }\r\n    }\r\n\r\n    const handleNoRemoverPaisClick = () => {\r\n        handleDismissAlertClick();\r\n    }\r\n\r\n    const onRenderEdit = (row) => <IconButton iconProps={{ iconName: 'Edit' }} onClick={handleEditPaisClick} />\r\n    const onRenderDelete = (row) => <IconButton iconProps={{ iconName: 'Delete' }} onClick={handleRemovePaisClick} />\r\n\r\n    const columns = [\r\n        { key: 'onRenderEdit', name: '', fieldName: '', minWidth: 30, maxWidth: 30, isResizable: true, onRender: onRenderEdit },\r\n        { key: 'onRenderDelete', name: '', fieldName: '', minWidth: 30, maxWidth: 30, isResizable: true, onRender: onRenderDelete },\r\n        { key: 'column1', name: 'Id', fieldName: 'id', minWidth: 100, maxWidth: 200, isResizable: true },\r\n        { key: 'column2', name: 'Nombre del pais', fieldName: 'nombre', minWidth: 100, maxWidth: 200, isResizable: true },\r\n    ]\r\n\r\n    const isDisableButton = pais ? false : true;\r\n\r\n    return (\r\n        <div className=\"pais\">\r\n\r\n            <CommandBar // Esta es la barra de comandos en donde están los botones para agregar, editar, etc.\r\n                items={[{\r\n                    key: 'refresh',\r\n                    text: 'Refresh',\r\n                    iconProps: { iconName: 'Refresh' },\r\n                    onClick: handleRefreshClick,\r\n                }, {\r\n                    key: 'newPais',\r\n                    text: 'New',\r\n                    iconProps: { iconName: 'Add' },\r\n                    onClick: handleNuevoPaisClick,\r\n                },\r\n                {\r\n                    key: 'removerPais',\r\n                    text: 'Remove',\r\n                    iconProps: { iconName: 'Delete' },\r\n                    onClick: handleRemovePaisClick,\r\n                    disabled: isDisableButton\r\n                }, {\r\n                    key: 'editarPais',\r\n                    text: 'Editar Pais',\r\n                    iconProps: { iconName: 'Edit' },\r\n                    onClick: handleEditPaisClick,\r\n                    disabled: isDisableButton\r\n                }]}\r\n            />\r\n\r\n            <SearchBox // Control de búsqueda\r\n                styles={{ root: { width: '300px' } }} placeholder=\"Buscar...\" onSearch={handleSearchPais} />\r\n\r\n            <div className=\"contenedorLista\">\r\n                <ShimmeredDetailsList\r\n                    items={filtro.length ? filtro : paises}\r\n                    columns={columns}\r\n                    layoutMode={DetailsListLayoutMode.justified}\r\n                    selection={seleccion}\r\n                    selectionPreservedOnEmptyClick={true}\r\n                    selectionMode={SelectionMode.single}\r\n                    enableShimmer={!paises}\r\n                />\r\n            </div>\r\n\r\n            <Panel // Este es el panel que sale del lado derecho para agregar o editar información\r\n                headerText={accion === 'New' ? \"Nuevo Pais\" : \"Editar Pais\"} // Aquí se valida si el título de header es para hacer uno nuevo o para editar, esto debido a que se esta reutilizando el mismo panel\r\n                isOpen={isOpen}\r\n                onDismiss={handleDismissClick}\r\n                customWidth=\"700px\"\r\n            >\r\n                <PaisForm // Este es el formulario que contiene los controles con la información\r\n                    fetchPaises={fetchPaises} // Hace un GET a la API\r\n                    paisSeleccionado={pais || {}}\r\n                    accion={accion}\r\n                    onDismiss={handleDismissClick}\r\n                />\r\n            </Panel>\r\n\r\n            <Dialog // Ventana de diálogo que aparece cuándo se desea remover un registro\r\n                hidden={isOpenAlert}\r\n                onDismiss={handleDismissAlertClick}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: 'Remove Country',\r\n                    closeButtonAriaLabel: 'Close',\r\n                    subText: 'Remove Country?',\r\n                }}\r\n                modalProps={{\r\n                    titleAriaId: '',\r\n                    subtitleAriaId: '',\r\n                    isBlocking: false,\r\n                    styles: { main: { maxWidth: 450 } },\r\n                }}\r\n            >\r\n\r\n                <DialogFooter\r\n                // Esto muestra los dos botones en la parte inferior, conultando se desea o no eliminar el registro\r\n                >\r\n                    <PrimaryButton onClick={handleRemoverPaisClick} text=\"Si\" />\r\n                    <DefaultButton onClick={handleNoRemoverPaisClick} text=\"No\" />\r\n                </DialogFooter>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}