{"ast":null,"code":"// Aquí debe colocar la URL de sus servicios, recurde solo colocar la base, es decir, hasta api\nconst urlBase = 'https://localhost:44394/api';\nexport class restClient {}\n\nrestClient.httpGet = url => {\n  return fetch(`${urlBase}${url}`).then(response => {\n    if (response.status === 400) {\n      return response.text();\n    }\n\n    return response.json();\n  }).then(response => {\n    return response;\n  });\n};\n\nrestClient.httpPost = (url, req) => {\n  return fetch(`${urlBase}${url}`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(req)\n  }).catch(error => {}).then(res => {\n    if (res.status >= 400) {\n      return res.text();\n    }\n\n    return res.json();\n  }).then(res => {\n    return res;\n  });\n};\n\nrestClient.httpDelete = (url, id) => {\n  return fetch(`${urlBase}${url}/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.text();\n  }).then(res => {\n    return res;\n  });\n};\n\nrestClient.httpPut = (url, req) => {\n  return fetch(`${urlBase}${url}`, {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(req)\n  }).catch(error => {}).then(res => {\n    return res.text();\n  }).then(res => {\n    return res;\n  });\n};","map":{"version":3,"sources":["C:/Users/Wong/Documents/Projects/Matricula/matricula/src/services/restClient.js"],"names":["urlBase","restClient","httpGet","url","fetch","then","response","status","text","json","httpPost","req","method","headers","body","JSON","stringify","catch","error","res","httpDelete","id","httpPut"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,6BAAhB;AACA,OAAO,MAAMC,UAAN,CAAiB;;AAAXA,U,CACFC,O,GAAWC,GAAD,IAAS;AAEtB,SAAOC,KAAK,CAAE,GAAEJ,OAAQ,GAAEG,GAAI,EAAlB,CAAL,CACFE,IADE,CACGC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACH,GANE,EAOFJ,IAPE,CAOGC,QAAQ,IAAI;AACd,WAAOA,QAAP;AACH,GATE,CAAP;AAUH,C;;AAbQL,U,CAeFS,Q,GAAW,CAACP,GAAD,EAAMQ,GAAN,KAAc;AAE5B,SAAOP,KAAK,CAAE,GAAEJ,OAAQ,GAAEG,GAAI,EAAlB,EAAqB;AAC7BS,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFoB;AAK7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;AALuB,GAArB,CAAL,CAMJM,KANI,CAMEC,KAAK,IAAI,CAEjB,CARM,EAQJb,IARI,CAQCc,GAAG,IAAI;AACX,QAAIA,GAAG,CAACZ,MAAJ,IAAc,GAAlB,EAAuB;AACnB,aAAOY,GAAG,CAACX,IAAJ,EAAP;AACH;;AAED,WAAOW,GAAG,CAACV,IAAJ,EAAP;AACH,GAdM,EAcJJ,IAdI,CAcCc,GAAG,IAAI;AACX,WAAOA,GAAP;AACH,GAhBM,CAAP;AAiBH,C;;AAlCQlB,U,CAoCFmB,U,GAAa,CAACjB,GAAD,EAAMkB,EAAN,KAAa;AAE7B,SAAOjB,KAAK,CAAE,GAAEJ,OAAQ,GAAEG,GAAI,IAAGkB,EAAG,EAAxB,EAA2B;AACnCT,IAAAA,MAAM,EAAE,QAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAF0B,GAA3B,CAAL,CAKJR,IALI,CAKCc,GAAG,IAAI;AACX,WAAOA,GAAG,CAACX,IAAJ,EAAP;AACH,GAPM,EAOJH,IAPI,CAOCc,GAAG,IAAI;AACX,WAAOA,GAAP;AACH,GATM,CAAP;AAUH,C;;AAhDQlB,U,CAkDFqB,O,GAAU,CAACnB,GAAD,EAAMQ,GAAN,KAAc;AAC3B,SAAOP,KAAK,CAAE,GAAEJ,OAAQ,GAAEG,GAAI,EAAlB,EAAqB;AAC7BS,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFoB;AAK7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;AALuB,GAArB,CAAL,CAMJM,KANI,CAMEC,KAAK,IAAI,CAEjB,CARM,EAQJb,IARI,CAQCc,GAAG,IAAI;AAEX,WAAOA,GAAG,CAACX,IAAJ,EAAP;AACH,GAXM,EAWJH,IAXI,CAWCc,GAAG,IAAI;AACX,WAAOA,GAAP;AACH,GAbM,CAAP;AAcH,C","sourcesContent":["// Aquí debe colocar la URL de sus servicios, recurde solo colocar la base, es decir, hasta api\r\nconst urlBase = 'https://localhost:44394/api'\r\nexport class restClient {\r\n    static httpGet = (url) => {\r\n\r\n        return fetch(`${urlBase}${url}`) \r\n            .then(response => {\r\n                if (response.status === 400) {\r\n                    return response.text();\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                return response\r\n            });\r\n    }\r\n\r\n    static httpPost = (url, req) => {\r\n\r\n        return fetch(`${urlBase}${url}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(req),\r\n        }).catch(error => {\r\n\r\n        }).then(res => {\r\n            if (res.status >= 400) {\r\n                return res.text();\r\n            }\r\n\r\n            return res.json();\r\n        }).then(res => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    static httpDelete = (url, id) => {\r\n\r\n        return fetch(`${urlBase}${url}/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then(res => {\r\n            return res.text();\r\n        }).then(res => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    static httpPut = (url, req) => {\r\n        return fetch(`${urlBase}${url}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(req),\r\n        }).catch(error => {\r\n\r\n        }).then(res => {\r\n\r\n            return res.text();\r\n        }).then(res => {\r\n            return res;\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}