{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wong\\\\Documents\\\\Projects\\\\Matricula\\\\matricula\\\\src\\\\components\\\\container\\\\estudiante\\\\estudianteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\nimport { restClient } from '../../../services/restClient';\nconst generos = [{\n  key: 'F',\n  text: 'F'\n}, {\n  key: 'M',\n  text: 'M'\n}];\nexport const EstudianteForm = ({\n  fetchEstudiantes,\n  estudianteSeleccionado,\n  acccion,\n  onDismiss\n}) => {\n  _s();\n\n  const [estudiante, setEstudiante] = useState({\n    id: acccion === 'Edit' ? estudianteSeleccionado.id : 0,\n    nombre: acccion === 'Edit' ? estudianteSeleccionado.nombre : '',\n    sexo: acccion === 'Edit' ? estudianteSeleccionado.sexo : '',\n    correo: acccion === 'Edit' ? estudianteSeleccionado.correo : '',\n    edad: acccion === 'Edit' ? estudianteSeleccionado.edad : 0,\n    paisId: acccion === 'Edit' ? estudianteSeleccionado.paisId : 0,\n    cursoId: acccion === 'Edit' ? estudianteSeleccionado.cursoId : 0\n  });\n  const [mensajeValidacion, setMensajeValidacion] = useState('');\n  const [errorCampo, setErrorCampo] = useState({\n    nombre: '',\n    sexo: '',\n    edad: '',\n    cursoId: ''\n  });\n  const [cursos, setCursos] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n  useEffect(() => {\n    const fetchCursos = async () => {\n      const response = await restClient.httpGet('/curso');\n\n      if (response && response.length) {\n        setCursos(response.map(curso => ({\n          key: curso.id,\n          text: curso.nombre\n        })));\n      }\n    };\n\n    const fetchPaises = async () => {\n      const response = await restClient.httpGet('/pais');\n\n      if (response && response.length) {\n        setPaises(response.map(pais => ({\n          key: pais.id,\n          text: pais.nombre\n        })));\n      }\n    };\n\n    fetchPaises();\n    fetchCursos();\n  }, []);\n\n  const handleTextFieldChange = prop => (event, value) => {\n    setEstudiante({ ...estudiante,\n      [prop]: value\n    });\n  };\n\n  const handleSelectedCursoChange = (event, option) => {\n    setEstudiante({ ...estudiante,\n      cursoId: option.key\n    });\n  };\n\n  const handleSelectedPaisChange = (event, option) => {\n    setEstudiante({ ...estudiante,\n      paisId: option.key\n    });\n  };\n\n  const handleSelectedSexoChange = (event, option) => {\n    setEstudiante({ ...estudiante,\n      sexo: option.key\n    });\n  };\n\n  const validandoCampos = () => {\n    let mensaje = {};\n\n    if (!estudiante.nombre) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese nombre'\n      };\n    }\n\n    if (estudiante.edad < 18) {\n      mensaje = { ...mensaje,\n        edad: 'Edad debe sera mayor o igual a 18'\n      };\n    }\n\n    if (!estudiante.correo) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese correo'\n      };\n    }\n\n    if (!estudiante.sexo) {\n      mensaje = { ...mensaje,\n        sexo: 'Seleccione un genero...'\n      };\n    }\n\n    if (!estudiante.paisId) {\n      mensaje = { ...mensaje,\n        cursoId: 'Seleccione un pais...'\n      };\n    }\n\n    if (!estudiante.cursoId) {\n      mensaje = { ...mensaje,\n        cursoId: 'Seleccione un curso...'\n      };\n    }\n\n    setErrorCampo(mensaje);\n    return Object.keys(mensaje).length;\n  };\n\n  const handleGuardarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true); //activar spinner\n\n    const response = await restClient.httpPost('/Estudiante', estudiante);\n\n    if (typeof response === 'string') {\n      setMensajeValidacion(response);\n    }\n\n    if (typeof response == \"object\") {\n      setMensajeValidacion('Saved');\n      fetchEstudiantes();\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  const handleEditarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true);\n    const url = `/Estudiante/${estudianteSeleccionado.id}`;\n    const response = await restClient.httpPut(url, estudiante);\n\n    if (response === 'success') {\n      setMensajeValidacion('Saved');\n      fetchEstudiantes();\n    } else {\n      setMensajeValidacion(response);\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSpinner && /*#__PURE__*/_jsxDEV(ProgressIndicator, {\n      label: \"Guardando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Nombre\",\n      value: estudiante.nombre,\n      onChange: handleTextFieldChange('nombre'),\n      errorMessage: errorCampo.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"Number\",\n      label: \"Edad\",\n      value: estudiante.edad,\n      onChange: handleTextFieldChange('edad'),\n      errorMessage: errorCampo.edad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Correo\",\n      value: estudiante.correo,\n      onChange: handleTextFieldChange('correo'),\n      errorMessage: errorCampo.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Seleccione un curso\",\n      options: cursos,\n      selectedKey: estudiante.cursoId,\n      onChange: handleSelectedCursoChange,\n      errorMessage: errorCampo.cursoId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Seleccione un pais\",\n      options: paises,\n      selectedKey: estudiante.paisId,\n      onChange: handleSelectedPaisChange,\n      errorMessage: errorCampo.paisId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Seleccione un g\\xE9nero\",\n      options: generos,\n      selectedKey: estudiante.sexo,\n      onChange: handleSelectedSexoChange,\n      errorMessage: errorCampo.sexo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      text: \"Guardar\",\n      onClick: acccion === 'New' ? handleGuardarClick : handleEditarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: mensajeValidacion === 'Saved' ? 'green' : 'red'\n      },\n      children: mensajeValidacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EstudianteForm, \"g5UlNK5Z3pANYfGAnC5Iht7oyQc=\");\n\n_c = EstudianteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EstudianteForm\");","map":{"version":3,"sources":["C:/Users/Wong/Documents/Projects/Matricula/matricula/src/components/container/estudiante/estudianteForm.js"],"names":["React","useEffect","useState","Dropdown","PrimaryButton","ProgressIndicator","TextField","restClient","generos","key","text","EstudianteForm","fetchEstudiantes","estudianteSeleccionado","acccion","onDismiss","estudiante","setEstudiante","id","nombre","sexo","correo","edad","paisId","cursoId","mensajeValidacion","setMensajeValidacion","errorCampo","setErrorCampo","cursos","setCursos","paises","setPaises","showSpinner","setShowSpinner","fetchCursos","response","httpGet","length","map","curso","fetchPaises","pais","handleTextFieldChange","prop","event","value","handleSelectedCursoChange","option","handleSelectedPaisChange","handleSelectedSexoChange","validandoCampos","mensaje","Object","keys","handleGuardarClick","httpPost","handleEditarClick","url","httpPut","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../../services/restClient';\r\n\r\nconst generos = [{ key: 'F', text: 'F' }, { key: 'M', text: 'M' }];\r\n\r\nexport const EstudianteForm = ({ fetchEstudiantes, estudianteSeleccionado, acccion, onDismiss }) => {\r\n    const [estudiante, setEstudiante] = useState({\r\n        id: acccion === 'Edit' ? estudianteSeleccionado.id : 0,\r\n        nombre: acccion === 'Edit' ? estudianteSeleccionado.nombre : '',\r\n        sexo: acccion === 'Edit' ? estudianteSeleccionado.sexo : '',\r\n        correo: acccion === 'Edit' ? estudianteSeleccionado.correo : '',\r\n        edad: acccion === 'Edit' ? estudianteSeleccionado.edad : 0,\r\n        paisId: acccion === 'Edit' ? estudianteSeleccionado.paisId : 0,\r\n        cursoId: acccion === 'Edit' ? estudianteSeleccionado.cursoId : 0\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        sexo: '',\r\n        edad: '',\r\n        cursoId: ''\r\n    });\r\n\r\n    const [cursos, setCursos] = useState([]);\r\n    const [paises, setPaises] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCursos = async () => {\r\n            const response = await restClient.httpGet('/curso');\r\n\r\n            if (response && response.length) {\r\n                setCursos(response.map(curso => ({\r\n                    key: curso.id,\r\n                    text: curso.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        const fetchPaises = async () => {\r\n            const response = await restClient.httpGet('/pais');\r\n\r\n            if (response && response.length) {\r\n                setPaises(response.map(pais => ({\r\n                    key: pais.id,\r\n                    text: pais.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchPaises();\r\n        fetchCursos();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setEstudiante({ ...estudiante, [prop]: value })\r\n    }\r\n\r\n    const handleSelectedCursoChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, cursoId: option.key });\r\n    }\r\n\r\n    const handleSelectedPaisChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, paisId: option.key });\r\n    }\r\n\r\n    const handleSelectedSexoChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, sexo: option.key });\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!estudiante.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        if (estudiante.edad < 18) {\r\n            mensaje = { ...mensaje, edad: 'Edad debe sera mayor o igual a 18' };\r\n        }\r\n\r\n        if (!estudiante.correo) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese correo' };\r\n        }\r\n\r\n        if (!estudiante.sexo) {\r\n            mensaje = { ...mensaje, sexo: 'Seleccione un genero...' };\r\n        }\r\n\r\n        if (!estudiante.paisId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione un pais...' };\r\n        }\r\n\r\n        if (!estudiante.cursoId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione un curso...' };\r\n        }\r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Estudiante', estudiante);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchEstudiantes();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Estudiante/${estudianteSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, estudiante);\r\n\r\n        if (response === 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchEstudiantes();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={estudiante.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <TextField type=\"Number\" label=\"Edad\"\r\n                value={estudiante.edad}\r\n                onChange={handleTextFieldChange('edad')}\r\n                errorMessage={errorCampo.edad} />\r\n\r\n            <TextField label=\"Correo\"\r\n                value={estudiante.correo}\r\n                onChange={handleTextFieldChange('correo')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <Dropdown label=\"Seleccione un curso\"\r\n                options={cursos}\r\n                selectedKey={estudiante.cursoId}\r\n                onChange={handleSelectedCursoChange}\r\n                errorMessage={errorCampo.cursoId} />\r\n\r\n            <Dropdown label=\"Seleccione un pais\"\r\n                options={paises}\r\n                selectedKey={estudiante.paisId}\r\n                onChange={handleSelectedPaisChange}\r\n                errorMessage={errorCampo.paisId} />\r\n\r\n            <Dropdown label=\"Seleccione un género\"\r\n                options={generos}\r\n                selectedKey={estudiante.sexo}\r\n                onChange={handleSelectedSexoChange}\r\n                errorMessage={errorCampo.sexo} />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}