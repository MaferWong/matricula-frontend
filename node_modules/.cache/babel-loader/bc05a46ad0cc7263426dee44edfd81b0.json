{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wong\\\\Documents\\\\Projects\\\\Matricula\\\\matricula\\\\src\\\\components\\\\container\\\\curso\\\\cursoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\nimport { restClient } from '../../../services/restClient';\nexport const CursoForm = ({\n  fetchCursos,\n  cursoSeleccionado,\n  accion,\n  onDismiss\n}) => {\n  _s();\n\n  const [curso, setCurso] = useState({\n    id: accion === 'Edit' ? cursoSeleccionado.id : 0,\n    nombre: accion === 'Edit' ? cursoSeleccionado.nombre : ''\n  });\n  const [mensajeValidacion, setMensajeValidacion] = useState('');\n  const [errorCampo, setErrorCampo] = useState({\n    nombre: ''\n  });\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const handleTextFieldChange = prop => (event, value) => {\n    setCurso({ ...curso,\n      [prop]: value\n    });\n  };\n\n  const validandoCampos = () => {\n    let mensaje = {};\n\n    if (!curso.nombre) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese nombre'\n      };\n    }\n\n    setErrorCampo(mensaje);\n    return Object.keys(mensaje).length;\n  };\n\n  const handleGuardarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true); //activar spinner\n\n    const response = await restClient.httpPost('/Curso', curso);\n\n    if (typeof response === 'string') {\n      setMensajeValidacion(response);\n    }\n\n    if (typeof response == \"object\") {\n      setMensajeValidacion('Saved');\n      fetchCursos();\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  const handleEditarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true);\n    const url = `/Curso/${cursoSeleccionado.id}`;\n    const response = await restClient.httpPut(url, curso);\n\n    if (response === 'success') {\n      setMensajeValidacion('Saved');\n      fetchCursos();\n    } else {\n      setMensajeValidacion(response);\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSpinner && /*#__PURE__*/_jsxDEV(ProgressIndicator, {\n      label: \"Guardando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Nombre\",\n      value: curso.nombre,\n      onChange: handleTextFieldChange('nombre'),\n      errorMessage: errorCampo.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      text: \"Guardar\",\n      onClick: accion === 'New' ? handleGuardarClick : handleEditarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: mensajeValidacion === 'Saved' ? 'green' : 'red'\n      },\n      children: mensajeValidacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CursoForm, \"p4ecTub4vMyj79cH6ueGg+LLNwg=\");\n\n_c = CursoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CursoForm\");","map":{"version":3,"sources":["C:/Users/Wong/Documents/Projects/Matricula/matricula/src/components/container/curso/cursoForm.js"],"names":["React","useState","PrimaryButton","ProgressIndicator","TextField","restClient","CursoForm","fetchCursos","cursoSeleccionado","accion","onDismiss","curso","setCurso","id","nombre","mensajeValidacion","setMensajeValidacion","errorCampo","setErrorCampo","showSpinner","setShowSpinner","handleTextFieldChange","prop","event","value","validandoCampos","mensaje","Object","keys","length","handleGuardarClick","response","httpPost","handleEditarClick","url","httpPut","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../../services/restClient';\r\n\r\nexport const CursoForm = ({ fetchCursos, cursoSeleccionado, accion, onDismiss }) => {\r\n    const [curso, setCurso] = useState({\r\n        id: accion === 'Edit' ? cursoSeleccionado.id : 0,\r\n        nombre: accion === 'Edit' ? cursoSeleccionado.nombre : ''\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setCurso({ ...curso, [prop]: value })\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!curso.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Curso', curso);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchCursos();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Curso/${cursoSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, curso);\r\n\r\n        if (response === 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchCursos();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={curso.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={accion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}