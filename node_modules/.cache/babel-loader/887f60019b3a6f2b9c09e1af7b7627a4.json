{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wong\\\\Documents\\\\Projects\\\\Matricula\\\\matricula\\\\src\\\\components\\\\container\\\\profesor\\\\profesorForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\nimport { restClient } from '../../../services/restClient';\nconst generos = [{\n  key: 'F',\n  text: 'F'\n}, {\n  key: 'M',\n  text: 'M'\n}];\nexport const ProfesorForm = ({\n  fetchProfesores,\n  profesorSeleccionado,\n  acccion,\n  onDismiss\n}) => {\n  _s();\n\n  const [profesor, setProfesor] = useState({\n    id: acccion === 'Edit' ? profesorSeleccionado.id : 0,\n    nombre: acccion === 'Edit' ? profesorSeleccionado.nombre : '',\n    sexo: acccion === 'Edit' ? profesorSeleccionado.sexo : '',\n    correo: acccion === 'Edit' ? profesorSeleccionado.correo : '',\n    edad: acccion === 'Edit' ? profesorSeleccionado.edad : 0,\n    paisId: acccion === 'Edit' ? profesorSeleccionado.paisId : 0,\n    materiaId: acccion === 'Edit' ? profesorSeleccionado.materiaId : 0\n  });\n  const [mensajeValidacion, setMensajeValidacion] = useState('');\n  const [errorCampo, setErrorCampo] = useState({\n    nombre: '',\n    sexo: '',\n    correo: '',\n    edad: '',\n    paisId: '',\n    materiaId: ''\n  });\n  const [materias, setMaterias] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n  useEffect(() => {\n    const fetchMaterias = async () => {\n      const response = await restClient.httpGet('/materia');\n\n      if (response && response.length) {\n        setMaterias(response.map(materia => ({\n          key: materia.id,\n          text: materia.nombre\n        })));\n      }\n    };\n\n    const fetchPaises = async () => {\n      const response = await restClient.httpGet('/pais');\n\n      if (response && response.length) {\n        setPaises(response.map(pais => ({\n          key: pais.id,\n          text: pais.nombre\n        })));\n      }\n    };\n\n    fetchPaises();\n    fetchMaterias();\n  }, []);\n\n  const handleTextFieldChange = prop => (event, value) => {\n    setProfesor({ ...profesor,\n      [prop]: value\n    });\n  };\n\n  const handleSelectedMateriaChange = (event, option) => {\n    setProfesor({ ...profesor,\n      materiaId: option.key\n    });\n  };\n\n  const handleSelectedPaisChange = (event, option) => {\n    setProfesor({ ...profesor,\n      paisId: option.key\n    });\n  };\n\n  const handleSelectedSexoChange = (event, option) => {\n    setProfesor({ ...profesor,\n      sexo: option.key\n    });\n  };\n\n  const validandoCampos = () => {\n    let mensaje = {};\n\n    if (!profesor.nombre) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese nombre'\n      };\n    }\n\n    if (profesor.edad < 18) {\n      mensaje = { ...mensaje,\n        edad: 'Edad debe sera mayor o igual a 18'\n      };\n    }\n\n    if (!profesor.sexo) {\n      mensaje = { ...mensaje,\n        sexo: 'Seleccione un genero...'\n      };\n    }\n\n    if (!profesor.correo) {\n      mensaje = { ...mensaje,\n        sexo: 'Ingrese correo'\n      };\n    }\n\n    if (!profesor.paisId) {\n      mensaje = { ...mensaje,\n        cursoId: 'Seleccione un pais...'\n      };\n    }\n\n    if (!profesor.materiaId) {\n      mensaje = { ...mensaje,\n        cursoId: 'Seleccione una materia...'\n      };\n    }\n\n    setErrorCampo(mensaje);\n    return Object.keys(mensaje).length;\n  };\n\n  const handleGuardarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true); //activar spinner\n\n    const response = await restClient.httpPost('/Profesor', profesor);\n\n    if (typeof response === 'string') {\n      setMensajeValidacion(response);\n    }\n\n    if (typeof response == \"object\") {\n      setMensajeValidacion('Saved');\n      fetchProfesores();\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  const handleEditarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true);\n    const url = `/Profesor/${profesorSeleccionado.id}`;\n    const response = await restClient.httpPut(url, profesor);\n\n    if (response === 'success') {\n      setMensajeValidacion('Saved');\n      fetchProfesores();\n    } else {\n      setMensajeValidacion(response);\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSpinner && /*#__PURE__*/_jsxDEV(ProgressIndicator, {\n      label: \"Guardando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Nombre\",\n      value: profesor.nombre,\n      onChange: handleTextFieldChange('nombre'),\n      errorMessage: errorCampo.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"Number\",\n      label: \"Edad\",\n      value: profesor.edad,\n      onChange: handleTextFieldChange('edad'),\n      errorMessage: errorCampo.edad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Correo\",\n      value: profesor.correo,\n      onChange: handleTextFieldChange('correo'),\n      errorMessage: errorCampo.correo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Seleccione la materia\",\n      options: materias,\n      selectedKey: profesor.materiaId,\n      onChange: handleSelectedMateriaChange,\n      errorMessage: errorCampo.materiaId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Seleccione un pais\",\n      options: paises,\n      selectedKey: profesor.paisId,\n      onChange: handleSelectedPaisChange,\n      errorMessage: errorCampo.paisId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"Seleccione un g\\xE9nero\",\n      options: generos,\n      selectedKey: profesor.sexo,\n      onChange: handleSelectedSexoChange,\n      errorMessage: errorCampo.sexo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      text: \"Guardar\",\n      onClick: acccion === 'New' ? handleGuardarClick : handleEditarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: mensajeValidacion === 'Saved' ? 'green' : 'red'\n      },\n      children: mensajeValidacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfesorForm, \"mVudZLcI7+Gw3AmjkslLiiTutmM=\");\n\n_c = ProfesorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfesorForm\");","map":{"version":3,"sources":["C:/Users/Wong/Documents/Projects/Matricula/matricula/src/components/container/profesor/profesorForm.js"],"names":["React","useEffect","useState","Dropdown","PrimaryButton","ProgressIndicator","TextField","restClient","generos","key","text","ProfesorForm","fetchProfesores","profesorSeleccionado","acccion","onDismiss","profesor","setProfesor","id","nombre","sexo","correo","edad","paisId","materiaId","mensajeValidacion","setMensajeValidacion","errorCampo","setErrorCampo","materias","setMaterias","paises","setPaises","showSpinner","setShowSpinner","fetchMaterias","response","httpGet","length","map","materia","fetchPaises","pais","handleTextFieldChange","prop","event","value","handleSelectedMateriaChange","option","handleSelectedPaisChange","handleSelectedSexoChange","validandoCampos","mensaje","cursoId","Object","keys","handleGuardarClick","httpPost","handleEditarClick","url","httpPut","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../../services/restClient';\r\n\r\nconst generos = [{ key: 'F', text: 'F' }, { key: 'M', text: 'M' }];\r\n\r\nexport const ProfesorForm = ({ fetchProfesores, profesorSeleccionado, acccion, onDismiss }) => {\r\n    const [profesor, setProfesor] = useState({\r\n        id: acccion === 'Edit' ? profesorSeleccionado.id : 0,\r\n        nombre: acccion === 'Edit' ? profesorSeleccionado.nombre : '',\r\n        sexo: acccion === 'Edit' ? profesorSeleccionado.sexo : '',\r\n        correo: acccion === 'Edit' ? profesorSeleccionado.correo : '',\r\n        edad: acccion === 'Edit' ? profesorSeleccionado.edad : 0,\r\n        paisId: acccion === 'Edit' ? profesorSeleccionado.paisId : 0,\r\n        materiaId: acccion === 'Edit' ? profesorSeleccionado.materiaId : 0\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        sexo: '',\r\n        correo: '',\r\n        edad: '',\r\n        paisId: '',\r\n        materiaId: ''\r\n    });\r\n\r\n    const [materias, setMaterias] = useState([]);\r\n    const [paises, setPaises] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMaterias = async () => {\r\n            const response = await restClient.httpGet('/materia');\r\n\r\n            if (response && response.length) {\r\n                setMaterias(response.map(materia => ({\r\n                    key: materia.id,\r\n                    text: materia.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        const fetchPaises = async () => {\r\n            const response = await restClient.httpGet('/pais');\r\n\r\n            if (response && response.length) {\r\n                setPaises(response.map(pais => ({\r\n                    key: pais.id,\r\n                    text: pais.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchPaises();\r\n        fetchMaterias();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setProfesor({ ...profesor, [prop]: value })\r\n    }\r\n\r\n    const handleSelectedMateriaChange = (event, option) => {\r\n        setProfesor({ ...profesor, materiaId: option.key });\r\n    }\r\n\r\n    const handleSelectedPaisChange = (event, option) => {\r\n        setProfesor({ ...profesor, paisId: option.key });\r\n    }\r\n\r\n    const handleSelectedSexoChange = (event, option) => {\r\n        setProfesor({ ...profesor, sexo: option.key });\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!profesor.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        if (profesor.edad < 18) {\r\n            mensaje = { ...mensaje, edad: 'Edad debe sera mayor o igual a 18' };\r\n        }\r\n\r\n        if (!profesor.sexo) {\r\n            mensaje = { ...mensaje, sexo: 'Seleccione un genero...' };\r\n        }\r\n\r\n        if (!profesor.correo) {\r\n            mensaje = { ...mensaje, sexo: 'Ingrese correo' };\r\n        }\r\n\r\n        if (!profesor.paisId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione un pais...' };\r\n        }\r\n\r\n        if (!profesor.materiaId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione una materia...' };\r\n        }\r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Profesor', profesor);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchProfesores();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Profesor/${profesorSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, profesor);\r\n\r\n        if (response === 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchProfesores();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={profesor.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre}\r\n            />\r\n\r\n            <TextField type=\"Number\" label=\"Edad\"\r\n                value={profesor.edad}\r\n                onChange={handleTextFieldChange('edad')}\r\n                errorMessage={errorCampo.edad}\r\n            />\r\n\r\n            <TextField label=\"Correo\"\r\n                value={profesor.correo}\r\n                onChange={handleTextFieldChange('correo')}\r\n                errorMessage={errorCampo.correo}\r\n            />\r\n\r\n            <Dropdown label=\"Seleccione la materia\"\r\n                options={materias}\r\n                selectedKey={profesor.materiaId}\r\n                onChange={handleSelectedMateriaChange}\r\n                errorMessage={errorCampo.materiaId}\r\n            />\r\n\r\n            <Dropdown label=\"Seleccione un pais\"\r\n                options={paises}\r\n                selectedKey={profesor.paisId}\r\n                onChange={handleSelectedPaisChange}\r\n                errorMessage={errorCampo.paisId}\r\n            />\r\n\r\n            <Dropdown label=\"Seleccione un género\"\r\n                options={generos}\r\n                selectedKey={profesor.sexo}\r\n                onChange={handleSelectedSexoChange}\r\n                errorMessage={errorCampo.sexo}\r\n            />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}