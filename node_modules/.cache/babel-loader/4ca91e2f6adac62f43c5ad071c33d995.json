{"ast":null,"code":"import { merge } from '@uifabric/utilities';\n/**\r\n * Get tokens from theme object.\r\n */\n\nexport function getTokens(theme, userTokens) {\n  var fonts = theme.fonts;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var preparedTokens = merge({\n    color: {\n      body: {\n        background: semanticColors.bodyBackground,\n        contentColor: semanticColors.bodyText\n      },\n      // accent is currently only mapped for primary button to use.\n      brand: {\n        background: semanticColors.primaryButtonBackground,\n        borderColor: semanticColors.primaryButtonBorder,\n        contentColor: semanticColors.primaryButtonText,\n        iconColor: palette.white,\n        dividerColor: palette.white,\n        secondaryContentColor: palette.white,\n        hovered: {\n          background: semanticColors.primaryButtonBackgroundHovered,\n          contentColor: semanticColors.primaryButtonTextHovered,\n          secondaryContentColor: palette.white,\n          borderColor: 'var(--color-brand-borderColor)'\n        },\n        pressed: {\n          background: semanticColors.primaryButtonBackgroundPressed,\n          contentColor: semanticColors.primaryButtonTextPressed,\n          secondaryContentColor: semanticColors.primaryButtonTextPressed,\n          borderColor: 'var(--color-brand-borderColor)',\n          iconColor: 'var(--color-brand-iconColor)'\n        },\n        focused: {\n          background: 'var(--color-brand-background)',\n          borderColor: 'var(--color-brand-borderColor)',\n          contentColor: 'var(--color-brand-contentColor)',\n          iconColor: 'var(--color-brand-iconColor)',\n          secondaryContentColor: 'var(--color-brand-focused-contentColor)'\n        },\n        disabled: {\n          background: semanticColors.primaryButtonBackgroundDisabled,\n          contentColor: semanticColors.buttonTextDisabled,\n          dividerColor: palette.neutralTertiaryAlt,\n          secondaryContentColor: 'var(--color-brand-disabled-contentColor)',\n          borderColor: 'var(--color-brand-disabled-background)',\n          iconColor: 'var(--color-brand-disabled-contentColor)'\n        },\n        checked: {\n          background: semanticColors.primaryButtonBackgroundPressed,\n          contentColor: semanticColors.primaryButtonTextPressed,\n          iconColor: semanticColors.primaryButtonTextPressed\n        },\n        checkedHovered: {\n          background: semanticColors.primaryButtonBackgroundPressed,\n          contentColor: semanticColors.primaryButtonTextPressed,\n          iconColor: semanticColors.primaryButtonTextPressed\n        }\n      }\n    },\n    body: {\n      fontFamily: fonts.medium.fontFamily,\n      fontWeight: fonts.medium.fontWeight,\n      fontSize: fonts.medium.fontSize,\n      mozOsxFontSmoothing: fonts.medium.MozOsxFontSmoothing,\n      webkitFontSmoothing: fonts.medium.WebkitFontSmoothing\n    },\n    // TODO: This will be moved out as a text variant.\n    text: {\n      variant: {\n        caption: {\n          fontSize: '12px',\n          fontWeight: '400',\n          lineHeight: '14px'\n        },\n        body: {\n          fontSize: '14px',\n          fontWeight: '400',\n          lineHeight: '20px'\n        },\n        subHeadline: {\n          fontSize: '16px',\n          fontWeight: '600',\n          lineHeight: '22px'\n        },\n        headline: {\n          fontSize: '20px',\n          fontWeight: '600',\n          lineHeight: '28px'\n        },\n        title3: {\n          fontSize: '24px',\n          fontWeight: '600',\n          lineHeight: '32px'\n        },\n        title2: {\n          fontSize: '28px',\n          fontWeight: '600',\n          lineHeight: '36px'\n        },\n        title1: {\n          fontSize: '32px',\n          fontWeight: '600',\n          lineHeight: '40px'\n        },\n        largeTitle: {\n          fontSize: '40px',\n          fontWeight: '600',\n          lineHeight: '52px'\n        },\n        display: {\n          fontSize: '68px',\n          fontWeight: '600',\n          lineHeight: '92px'\n        }\n      }\n    }\n  }, userTokens);\n  return preparedTokens;\n}","map":{"version":3,"sources":["getTokens.ts"],"names":[],"mappings":"AACA,SAAS,KAAT,QAAsB,qBAAtB;AAEA;;AAEG;;AACH,OAAM,SAAU,SAAV,CAAoB,KAApB,EAAkC,UAAlC,EAAuE;AACnE,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AACA,MAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AAAA,MAAS,cAAA,GAAA,KAAA,CAAA,cAAT;AAER,MAAM,cAAc,GAAG,KAAK,CAC1B;AACE,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE;AACJ,QAAA,UAAU,EAAE,cAAc,CAAC,cADvB;AAEJ,QAAA,YAAY,EAAE,cAAc,CAAC;AAFzB,OADD;AAML;AACA,MAAA,KAAK,EAAE;AACL,QAAA,UAAU,EAAE,cAAc,CAAC,uBADtB;AAEL,QAAA,WAAW,EAAE,cAAc,CAAC,mBAFvB;AAGL,QAAA,YAAY,EAAE,cAAc,CAAC,iBAHxB;AAIL,QAAA,SAAS,EAAE,OAAO,CAAC,KAJd;AAKL,QAAA,YAAY,EAAE,OAAO,CAAC,KALjB;AAML,QAAA,qBAAqB,EAAE,OAAO,CAAC,KAN1B;AAQL,QAAA,OAAO,EAAE;AACP,UAAA,UAAU,EAAE,cAAc,CAAC,8BADpB;AAEP,UAAA,YAAY,EAAE,cAAc,CAAC,wBAFtB;AAGP,UAAA,qBAAqB,EAAE,OAAO,CAAC,KAHxB;AAIP,UAAA,WAAW,EAAE;AAJN,SARJ;AAeL,QAAA,OAAO,EAAE;AACP,UAAA,UAAU,EAAE,cAAc,CAAC,8BADpB;AAEP,UAAA,YAAY,EAAE,cAAc,CAAC,wBAFtB;AAGP,UAAA,qBAAqB,EAAE,cAAc,CAAC,wBAH/B;AAIP,UAAA,WAAW,EAAE,gCAJN;AAKP,UAAA,SAAS,EAAE;AALJ,SAfJ;AAuBL,QAAA,OAAO,EAAE;AACP,UAAA,UAAU,EAAE,+BADL;AAEP,UAAA,WAAW,EAAE,gCAFN;AAGP,UAAA,YAAY,EAAE,iCAHP;AAIP,UAAA,SAAS,EAAE,8BAJJ;AAKP,UAAA,qBAAqB,EAAE;AALhB,SAvBJ;AA+BL,QAAA,QAAQ,EAAE;AACR,UAAA,UAAU,EAAE,cAAc,CAAC,+BADnB;AAER,UAAA,YAAY,EAAE,cAAc,CAAC,kBAFrB;AAGR,UAAA,YAAY,EAAE,OAAO,CAAC,kBAHd;AAIR,UAAA,qBAAqB,EAAE,0CAJf;AAKR,UAAA,WAAW,EAAE,wCALL;AAMR,UAAA,SAAS,EAAE;AANH,SA/BL;AAwCL,QAAA,OAAO,EAAE;AACP,UAAA,UAAU,EAAE,cAAc,CAAC,8BADpB;AAEP,UAAA,YAAY,EAAE,cAAc,CAAC,wBAFtB;AAGP,UAAA,SAAS,EAAE,cAAc,CAAC;AAHnB,SAxCJ;AA8CL,QAAA,cAAc,EAAE;AACd,UAAA,UAAU,EAAE,cAAc,CAAC,8BADb;AAEd,UAAA,YAAY,EAAE,cAAc,CAAC,wBAFf;AAGd,UAAA,SAAS,EAAE,cAAc,CAAC;AAHZ;AA9CX;AAPF,KADT;AA8DE,IAAA,IAAI,EAAE;AACJ,MAAA,UAAU,EAAE,KAAK,CAAC,MAAN,CAAa,UADrB;AAEJ,MAAA,UAAU,EAAE,KAAK,CAAC,MAAN,CAAa,UAFrB;AAGJ,MAAA,QAAQ,EAAE,KAAK,CAAC,MAAN,CAAa,QAHnB;AAIJ,MAAA,mBAAmB,EAAE,KAAK,CAAC,MAAN,CAAa,mBAJ9B;AAKJ,MAAA,mBAAmB,EAAE,KAAK,CAAC,MAAN,CAAa;AAL9B,KA9DR;AAsEE;AACA,IAAA,IAAI,EAAE;AACJ,MAAA,OAAO,EAAE;AACP,QAAA,OAAO,EAAE;AACP,UAAA,QAAQ,EAAE,MADH;AAEP,UAAA,UAAU,EAAE,KAFL;AAGP,UAAA,UAAU,EAAE;AAHL,SADF;AAMP,QAAA,IAAI,EAAE;AACJ,UAAA,QAAQ,EAAE,MADN;AAEJ,UAAA,UAAU,EAAE,KAFR;AAGJ,UAAA,UAAU,EAAE;AAHR,SANC;AAYP,QAAA,WAAW,EAAE;AACX,UAAA,QAAQ,EAAE,MADC;AAEX,UAAA,UAAU,EAAE,KAFD;AAGX,UAAA,UAAU,EAAE;AAHD,SAZN;AAiBP,QAAA,QAAQ,EAAE;AACR,UAAA,QAAQ,EAAE,MADF;AAER,UAAA,UAAU,EAAE,KAFJ;AAGR,UAAA,UAAU,EAAE;AAHJ,SAjBH;AAuBP,QAAA,MAAM,EAAE;AACN,UAAA,QAAQ,EAAE,MADJ;AAEN,UAAA,UAAU,EAAE,KAFN;AAGN,UAAA,UAAU,EAAE;AAHN,SAvBD;AA4BP,QAAA,MAAM,EAAE;AACN,UAAA,QAAQ,EAAE,MADJ;AAEN,UAAA,UAAU,EAAE,KAFN;AAGN,UAAA,UAAU,EAAE;AAHN,SA5BD;AAiCP,QAAA,MAAM,EAAE;AACN,UAAA,QAAQ,EAAE,MADJ;AAEN,UAAA,UAAU,EAAE,KAFN;AAGN,UAAA,UAAU,EAAE;AAHN,SAjCD;AAuCP,QAAA,UAAU,EAAE;AACV,UAAA,QAAQ,EAAE,MADA;AAEV,UAAA,UAAU,EAAE,KAFF;AAGV,UAAA,UAAU,EAAE;AAHF,SAvCL;AA4CP,QAAA,OAAO,EAAE;AACP,UAAA,QAAQ,EAAE,MADH;AAEP,UAAA,UAAU,EAAE,KAFL;AAGP,UAAA,UAAU,EAAE;AAHL;AA5CF;AADL;AAvER,GAD0B,EA8H1B,UA9H0B,CAA5B;AAiIA,SAAO,cAAP;AACD","sourcesContent":["import { Tokens, Theme, RecursivePartial } from '@fluentui/theme';\nimport { merge } from '@uifabric/utilities';\n\n/**\n * Get tokens from theme object.\n */\nexport function getTokens(theme: Theme, userTokens?: RecursivePartial<Tokens>): RecursivePartial<Tokens> {\n  const { fonts } = theme;\n  const { palette, semanticColors } = theme;\n\n  const preparedTokens = merge<RecursivePartial<Tokens>>(\n    {\n      color: {\n        body: {\n          background: semanticColors.bodyBackground,\n          contentColor: semanticColors.bodyText,\n        },\n\n        // accent is currently only mapped for primary button to use.\n        brand: {\n          background: semanticColors.primaryButtonBackground,\n          borderColor: semanticColors.primaryButtonBorder,\n          contentColor: semanticColors.primaryButtonText,\n          iconColor: palette.white,\n          dividerColor: palette.white,\n          secondaryContentColor: palette.white,\n\n          hovered: {\n            background: semanticColors.primaryButtonBackgroundHovered,\n            contentColor: semanticColors.primaryButtonTextHovered,\n            secondaryContentColor: palette.white,\n            borderColor: 'var(--color-brand-borderColor)',\n          },\n\n          pressed: {\n            background: semanticColors.primaryButtonBackgroundPressed,\n            contentColor: semanticColors.primaryButtonTextPressed,\n            secondaryContentColor: semanticColors.primaryButtonTextPressed,\n            borderColor: 'var(--color-brand-borderColor)',\n            iconColor: 'var(--color-brand-iconColor)',\n          },\n\n          focused: {\n            background: 'var(--color-brand-background)',\n            borderColor: 'var(--color-brand-borderColor)',\n            contentColor: 'var(--color-brand-contentColor)',\n            iconColor: 'var(--color-brand-iconColor)',\n            secondaryContentColor: 'var(--color-brand-focused-contentColor)',\n          },\n\n          disabled: {\n            background: semanticColors.primaryButtonBackgroundDisabled,\n            contentColor: semanticColors.buttonTextDisabled,\n            dividerColor: palette.neutralTertiaryAlt,\n            secondaryContentColor: 'var(--color-brand-disabled-contentColor)',\n            borderColor: 'var(--color-brand-disabled-background)',\n            iconColor: 'var(--color-brand-disabled-contentColor)',\n          },\n\n          checked: {\n            background: semanticColors.primaryButtonBackgroundPressed,\n            contentColor: semanticColors.primaryButtonTextPressed,\n            iconColor: semanticColors.primaryButtonTextPressed,\n          },\n\n          checkedHovered: {\n            background: semanticColors.primaryButtonBackgroundPressed,\n            contentColor: semanticColors.primaryButtonTextPressed,\n            iconColor: semanticColors.primaryButtonTextPressed,\n          },\n        },\n      },\n\n      body: {\n        fontFamily: fonts.medium.fontFamily,\n        fontWeight: fonts.medium.fontWeight,\n        fontSize: fonts.medium.fontSize,\n        mozOsxFontSmoothing: fonts.medium.MozOsxFontSmoothing,\n        webkitFontSmoothing: fonts.medium.WebkitFontSmoothing,\n      },\n\n      // TODO: This will be moved out as a text variant.\n      text: {\n        variant: {\n          caption: {\n            fontSize: '12px',\n            fontWeight: '400',\n            lineHeight: '14px',\n          },\n          body: {\n            fontSize: '14px',\n            fontWeight: '400',\n            lineHeight: '20px',\n          },\n\n          subHeadline: {\n            fontSize: '16px',\n            fontWeight: '600',\n            lineHeight: '22px',\n          },\n          headline: {\n            fontSize: '20px',\n            fontWeight: '600',\n            lineHeight: '28px',\n          },\n\n          title3: {\n            fontSize: '24px',\n            fontWeight: '600',\n            lineHeight: '32px',\n          },\n          title2: {\n            fontSize: '28px',\n            fontWeight: '600',\n            lineHeight: '36px',\n          },\n          title1: {\n            fontSize: '32px',\n            fontWeight: '600',\n            lineHeight: '40px',\n          },\n\n          largeTitle: {\n            fontSize: '40px',\n            fontWeight: '600',\n            lineHeight: '52px',\n          },\n          display: {\n            fontSize: '68px',\n            fontWeight: '600',\n            lineHeight: '92px',\n          },\n        },\n      },\n    },\n\n    userTokens,\n  );\n\n  return preparedTokens;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}