{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wong\\\\Documents\\\\Projects\\\\Matricula\\\\matricula\\\\src\\\\components\\\\container\\\\materia\\\\materiaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\nimport { restClient } from '../../../services/restClient';\nexport const MateriaForm = ({\n  fetchMaterias,\n  materiaSeleccionada,\n  accion,\n  onDismiss\n}) => {\n  _s();\n\n  const [materia, setMateria] = useState({\n    id: accion === 'Edit' ? materiaSeleccionada.id : 0,\n    nombre: accion === 'Edit' ? materiaSeleccionada.nombre : '',\n    codigo: accion === 'Edit' ? materiaSeleccionada.codigo : '',\n    cursoId: accion === 'Edit' ? materiaSeleccionada.cursoId : ''\n  });\n  const [mensajeValidacion, setMensajeValidacion] = useState('');\n  const [errorCampo, setErrorCampo] = useState({\n    nombre: '',\n    codigo: '',\n    cursoId: ''\n  });\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const handleTextFieldChange = prop => (event, value) => {\n    setMateria({ ...materia,\n      [prop]: value\n    });\n  };\n\n  const validandoCampos = () => {\n    let mensaje = {};\n\n    if (!materia.nombre) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese nombre'\n      };\n    }\n\n    if (!materia.codigo) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese codigo'\n      };\n    }\n\n    if (!materia.cursoId) {\n      mensaje = { ...mensaje,\n        nombre: 'Ingrese el ID del curso'\n      };\n    }\n\n    setErrorCampo(mensaje);\n    return Object.keys(mensaje).length;\n  };\n\n  const handleGuardarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true); //activar spinner\n\n    const response = await restClient.httpPost('/materia', materia);\n\n    if (typeof response === 'string') {\n      setMensajeValidacion(response);\n    }\n\n    if (typeof response == \"object\") {\n      setMensajeValidacion('Saved');\n      fetchMaterias();\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  const handleEditarClick = async () => {\n    if (validandoCampos()) {\n      return;\n    }\n\n    setShowSpinner(true);\n    const url = `/Materia/${materiaSeleccionada.id}`;\n    const response = await restClient.httpPut(url, materia);\n\n    if (response === 'success') {\n      setMensajeValidacion('Saved');\n      fetchMaterias();\n    } else {\n      setMensajeValidacion(response);\n    }\n\n    setShowSpinner(false);\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSpinner && /*#__PURE__*/_jsxDEV(ProgressIndicator, {\n      label: \"Guardando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Nombre\",\n      value: materia.nombre,\n      onChange: handleTextFieldChange('nombre'),\n      errorMessage: errorCampo.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Codigo\",\n      value: materia.codigo,\n      onChange: handleTextFieldChange('codigo'),\n      errorMessage: errorCampo.codigo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"CursoId\",\n      value: materia.cursoId,\n      onChange: handleTextFieldChange('cursoId'),\n      errorMessage: errorCampo.cursoId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      text: \"Guardar\",\n      onClick: accion === 'New' ? handleGuardarClick : handleEditarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: mensajeValidacion === 'Saved' ? 'green' : 'red'\n      },\n      children: mensajeValidacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MateriaForm, \"qyfOUIGLtaBF10HtCLy6/eSTn7I=\");\n\n_c = MateriaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MateriaForm\");","map":{"version":3,"sources":["C:/Users/Wong/Documents/Projects/Matricula/matricula/src/components/container/materia/materiaForm.js"],"names":["React","useState","PrimaryButton","ProgressIndicator","TextField","restClient","MateriaForm","fetchMaterias","materiaSeleccionada","accion","onDismiss","materia","setMateria","id","nombre","codigo","cursoId","mensajeValidacion","setMensajeValidacion","errorCampo","setErrorCampo","showSpinner","setShowSpinner","handleTextFieldChange","prop","event","value","validandoCampos","mensaje","Object","keys","length","handleGuardarClick","response","httpPost","handleEditarClick","url","httpPut","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../../services/restClient';\r\n\r\nexport const MateriaForm = ({ fetchMaterias, materiaSeleccionada, accion, onDismiss }) => {\r\n    const [materia, setMateria] = useState({\r\n        id: accion === 'Edit' ? materiaSeleccionada.id : 0,\r\n        nombre: accion === 'Edit' ? materiaSeleccionada.nombre : '',\r\n        codigo: accion === 'Edit' ? materiaSeleccionada.codigo : '',\r\n        cursoId: accion === 'Edit' ? materiaSeleccionada.cursoId : ''\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        codigo: '',\r\n        cursoId: ''\r\n    });\r\n\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setMateria({ ...materia, [prop]: value })\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!materia.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        if (!materia.codigo) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese codigo' };\r\n        }\r\n\r\n        if (!materia.cursoId) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese el ID del curso' };\r\n        }\r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/materia', materia);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchMaterias();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Materia/${materiaSeleccionada.id}`;\r\n\r\n        const response = await restClient.httpPut(url, materia);\r\n\r\n        if (response === 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchMaterias();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={materia.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre}\r\n            />\r\n\r\n            <TextField label=\"Codigo\"\r\n                value={materia.codigo}\r\n                onChange={handleTextFieldChange('codigo')}\r\n                errorMessage={errorCampo.codigo}\r\n            />\r\n\r\n            <TextField label=\"CursoId\"\r\n                value={materia.cursoId}\r\n                onChange={handleTextFieldChange('cursoId')}\r\n                errorMessage={errorCampo.cursoId}\r\n            />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={accion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}