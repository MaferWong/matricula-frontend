{"ast":null,"code":"import * as React from 'react';\nimport { StylesheetContext } from './StylesheetContext';\n/**\r\n * A hook for providing a stylesheet or array of stylesheets. Can be used standalone\r\n * or with the `StylesheetProvider` component to direct styles to be registered to a\r\n * different target such as a child window or as a string in SSR scenarios.\r\n */\n\nexport var useStylesheet = function (sheets) {\n  var context = React.useContext(StylesheetContext);\n  context.registerStyles(sheets, context);\n};","map":{"version":3,"sources":["useStylesheet.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AAEA;;;;AAIG;;AACH,OAAO,IAAM,aAAa,GAAG,UAAC,MAAD,EAAsC;AACjE,MAAM,OAAO,GAAG,KAAK,CAAC,UAAN,CAAiB,iBAAjB,CAAhB;AAEA,EAAA,OAAO,CAAC,cAAR,CAAuB,MAAvB,EAA+B,OAA/B;AACD,CAJM","sourcesContent":["import * as React from 'react';\nimport { StylesheetContext } from './StylesheetContext';\n\n/**\n * A hook for providing a stylesheet or array of stylesheets. Can be used standalone\n * or with the `StylesheetProvider` component to direct styles to be registered to a\n * different target such as a child window or as a string in SSR scenarios.\n */\nexport const useStylesheet = (sheets: undefined | string | string[]) => {\n  const context = React.useContext(StylesheetContext);\n\n  context.registerStyles(sheets, context);\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}