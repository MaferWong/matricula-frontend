{"ast":null,"code":"import * as React from 'react';\nvar defaultDocument = {\n  document: 'document'\n};\n/**\r\n * Register styles can be called with a single or multiple stylesheets. Each will be evaluated\r\n * if they've been registered already, and then passed along to `renderStyles` if they're new\r\n * to the given context.\r\n */\n\nexport var registerStyles = function (sheets, context) {\n  var styleCache = context.styleCache,\n      target = context.target;\n\n  if (!sheets || sheets.length < 1) {\n    return;\n  }\n\n  if (!Array.isArray(sheets)) {\n    sheets = [sheets];\n  } // Grab the style cache for the target document.\n\n\n  var sheetsToRender = [];\n  var cacheKey = target || defaultDocument;\n  var targetStylesheets = styleCache.get(cacheKey);\n\n  if (!targetStylesheets) {\n    targetStylesheets = new Map();\n    styleCache.set(cacheKey, targetStylesheets);\n  }\n\n  for (var _i = 0, sheets_1 = sheets; _i < sheets_1.length; _i++) {\n    var sheet = sheets_1[_i];\n\n    if (!targetStylesheets.has(sheet)) {\n      sheetsToRender.push(sheet);\n      targetStylesheets.set(sheet, true);\n    }\n  }\n\n  if (sheetsToRender.length) {\n    context.renderStyles(sheetsToRender, context);\n  }\n};\n/**\r\n * Default renderStyles implementation, which will render the give sheets to the contextual\r\n * target.\r\n */\n\nvar renderStyles = function (sheets, context) {\n  var target = context.target;\n\n  if (sheets.length && target) {\n    var styleElement = target.createElement('style');\n    styleElement.textContent = sheets.join('');\n    target.head.appendChild(styleElement);\n  }\n}; // Shared stylesheet context, providing the registration function and target document.\n\n\nexport var StylesheetContext = React.createContext({\n  registerStyles: registerStyles,\n  renderStyles: renderStyles,\n  target: typeof window === 'object' ? window.document : undefined,\n  styleCache: new WeakMap()\n});","map":{"version":3,"sources":["StylesheetContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA,IAAM,eAAe,GAAG;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAAxB;AASA;;;;AAIG;;AACH,OAAO,IAAM,cAAc,GAAG,UAAC,MAAD,EAAwC,OAAxC,EAAsE;AAC1F,MAAA,UAAA,GAAA,OAAA,CAAA,UAAA;AAAA,MAAY,MAAA,GAAA,OAAA,CAAA,MAAZ;;AACR,MAAI,CAAC,MAAD,IAAW,MAAM,CAAC,MAAP,GAAgB,CAA/B,EAAkC;AAChC;AACD;;AAED,MAAI,CAAC,KAAK,CAAC,OAAN,CAAc,MAAd,CAAL,EAA4B;AAC1B,IAAA,MAAM,GAAG,CAAC,MAAD,CAAT;AACD,GARiG,CAUlG;;;AACA,MAAM,cAAc,GAAG,EAAvB;AACA,MAAM,QAAQ,GAAG,MAAM,IAAI,eAA3B;AACA,MAAI,iBAAiB,GAAG,UAAU,CAAC,GAAX,CAAe,QAAf,CAAxB;;AAEA,MAAI,CAAC,iBAAL,EAAwB;AACtB,IAAA,iBAAiB,GAAG,IAAI,GAAJ,EAApB;AACA,IAAA,UAAU,CAAC,GAAX,CAAe,QAAf,EAAyB,iBAAzB;AACD;;AAED,OAAoB,IAAA,EAAA,GAAA,CAAA,EAAA,QAAA,GAAA,MAApB,EAAoB,EAAA,GAAA,QAAA,CAAA,MAApB,EAAoB,EAAA,EAApB,EAA4B;AAAvB,QAAM,KAAK,GAAA,QAAA,CAAA,EAAA,CAAX;;AACH,QAAI,CAAC,iBAAiB,CAAC,GAAlB,CAAsB,KAAtB,CAAL,EAAmC;AACjC,MAAA,cAAc,CAAC,IAAf,CAAoB,KAApB;AACA,MAAA,iBAAiB,CAAC,GAAlB,CAAsB,KAAtB,EAA6B,IAA7B;AACD;AACF;;AAED,MAAI,cAAc,CAAC,MAAnB,EAA2B;AACzB,IAAA,OAAO,CAAC,YAAR,CAAqB,cAArB,EAAqC,OAArC;AACD;AACF,CA9BM;AAgCP;;;AAGG;;AACH,IAAM,YAAY,GAAG,UAAC,MAAD,EAAmB,OAAnB,EAAiD;AAC5D,MAAA,MAAA,GAAA,OAAA,CAAA,MAAA;;AAER,MAAI,MAAM,CAAC,MAAP,IAAiB,MAArB,EAA6B;AAC3B,QAAM,YAAY,GAAG,MAAM,CAAC,aAAP,CAAqB,OAArB,CAArB;AAEA,IAAA,YAAY,CAAC,WAAb,GAA2B,MAAM,CAAC,IAAP,CAAY,EAAZ,CAA3B;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,WAAZ,CAAwB,YAAxB;AACD;AACF,CATD,C,CAWA;;;AACA,OAAO,IAAM,iBAAiB,GAAG,KAAK,CAAC,aAAN,CAA2C;AAC1E,EAAA,cAAc,EAAA,cAD4D;AAE1E,EAAA,YAAY,EAAA,YAF8D;AAG1E,EAAA,MAAM,EAAE,OAAO,MAAP,KAAkB,QAAlB,GAA6B,MAAM,CAAC,QAApC,GAA+C,SAHmB;AAI1E,EAAA,UAAU,EAAE,IAAI,OAAJ;AAJ8D,CAA3C,CAA1B","sourcesContent":["import * as React from 'react';\nexport type HTMLDirection = 'rtl' | 'ltr' | 'auto';\n\nconst defaultDocument = { document: 'document' };\n\nexport interface StylesheetContextType {\n  target: Document | undefined;\n  registerStyles: (stylesheets: undefined | string | string[], context: StylesheetContextType) => void;\n  styleCache: WeakMap<Document | typeof defaultDocument, Map<string, boolean>>;\n  renderStyles: (stylesheets: string[], context: StylesheetContextType) => void;\n}\n\n/**\n * Register styles can be called with a single or multiple stylesheets. Each will be evaluated\n * if they've been registered already, and then passed along to `renderStyles` if they're new\n * to the given context.\n */\nexport const registerStyles = (sheets: undefined | string | string[], context: StylesheetContextType) => {\n  const { styleCache, target } = context;\n  if (!sheets || sheets.length < 1) {\n    return;\n  }\n\n  if (!Array.isArray(sheets)) {\n    sheets = [sheets];\n  }\n\n  // Grab the style cache for the target document.\n  const sheetsToRender = [];\n  const cacheKey = target || defaultDocument;\n  let targetStylesheets = styleCache.get(cacheKey);\n\n  if (!targetStylesheets) {\n    targetStylesheets = new Map();\n    styleCache.set(cacheKey, targetStylesheets);\n  }\n\n  for (const sheet of sheets) {\n    if (!targetStylesheets.has(sheet)) {\n      sheetsToRender.push(sheet);\n      targetStylesheets.set(sheet, true);\n    }\n  }\n\n  if (sheetsToRender.length) {\n    context.renderStyles(sheetsToRender, context);\n  }\n};\n\n/**\n * Default renderStyles implementation, which will render the give sheets to the contextual\n * target.\n */\nconst renderStyles = (sheets: string[], context: StylesheetContextType) => {\n  const { target } = context;\n\n  if (sheets.length && target) {\n    const styleElement = target.createElement('style');\n\n    styleElement.textContent = sheets.join('');\n    target.head.appendChild(styleElement);\n  }\n};\n\n// Shared stylesheet context, providing the registration function and target document.\nexport const StylesheetContext = React.createContext<StylesheetContextType>({\n  registerStyles,\n  renderStyles,\n  target: typeof window === 'object' ? window.document : undefined,\n  styleCache: new WeakMap<Document | typeof defaultDocument, Map<string, boolean>>(),\n});\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}