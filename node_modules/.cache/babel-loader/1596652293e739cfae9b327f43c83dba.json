{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { ThemeProvider } from './ThemeProvider';\nexport var withThemeProvider = function (Component) {\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(ThemeProvider, null, React.createElement(Component, __assign({}, props, {\n      ref: ref\n    })));\n  });\n};","map":{"version":3,"sources":["withThemeProvider.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,aAAT,QAA8B,iBAA9B;AAEA,OAAO,IAAM,iBAAiB,GAAG,UAAU,SAAV,EAAoD;AACnF,SAAA,KAAK,CAAC,UAAN,CAA4C,UAAC,KAAD,EAAQ,GAAR,EAAW;AAAK,WAC1D,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,IAAd,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,QAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAF+B;AAEpC,KAAV,CAAV,CADF,CAD0D;AAI3D,GAJD,CAAA;AAIE,CALG","sourcesContent":["import * as React from 'react';\nimport { ThemeProvider } from './ThemeProvider';\n\nexport const withThemeProvider = <TProps,>(Component: React.FunctionComponent<TProps>) =>\n  React.forwardRef<HTMLButtonElement, TProps>((props, ref) => (\n    <ThemeProvider>\n      <Component {...props} ref={ref} />\n    </ThemeProvider>\n  ));\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}